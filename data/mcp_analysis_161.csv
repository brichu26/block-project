owner,repo,github_stars,download_count,experimental_ai_generated_description,risk_category,adjusted_risk_score,popularity_score,doc_quality_score,doc_quality_adjustment,readme_found,has_installation_docs,has_usage_docs,has_api_reference,has_security_docs,has_error_handling,has_cli_docs,has_code_examples,has_screenshots,has_license_info,readme_size_bytes,headings_count,code_blocks_count,readability_score,missing_sections,oauth_implementation,direct_api_tokens,main_risk_factors,outbound_connections
packages,notte-mcp,380,0,"Notte MCP Server provides a bridge between AI assistants and Notte's cloud browser technology, enabling web automation and scraping capabilities. It offers tools for managing browser sessions, taking screenshots, observing page elements, scraping data, and executing actions on web pages. The server also includes an agent/operator feature that can autonomously complete specified tasks on websites. Built on FastMCP with tight integration to the Notte SDK, it's particularly valuable for applications requiring web interaction capabilities without managing browser automation directly.",MINIMAL,1.3,1.3,0,-0.0,No,No,No,No,No,No,No,No,No,No,0,0,0,0,,No,No,,
samuelgursky,davinci-resolve-mcp,151,0,"A Python-based MCP server for DaVinci Resolve that provides programmatic access to video editing, color grading, and media management functions. Created by Samuel Gursky, this implementation enables developers and editors to automate complex workflows in DaVinci Resolve through a flexible scripting interface, supporting operations like timeline manipulation, clip analysis, color correction, and media pool management.",MINIMAL,1.07,1.3,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,15640,51,23,3.5,,No,No,,http://localhost:8000/api
freepeak,db-mcp-server,150,0,"DB-MCP-Server provides a database connectivity layer for AI assistants through the Model Context Protocol, enabling direct interaction with MySQL and PostgreSQL databases. Built in Go, it supports both local stdio and production SSE transport modes, with configurable database connections through environment variables. The server can be deployed using Docker for easy integration into existing workflows, making it ideal for AI applications that need to query, analyze, or manipulate structured data stored in relational databases without requiring separate database access tools.",MINIMAL,1.07,1.3,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,25825,73,34,5.0,,No,No,,
dbt-labs,dbt-mcp,148,0,"dbt-MCP server provides a bridge between AI assistants and dbt (data build tool) resources, enabling interaction with data models, metrics, and transformations. Built by dbt Labs, it offers tools for executing dbt CLI commands, discovering metadata about models, and querying the dbt Semantic Layer. The server supports local dbt project operations, metadata retrieval from dbt Cloud, and metric querying capabilities, making it valuable for data analysts and engineers who want to explore, analyze, and manage their data transformations through natural language interfaces without manually navigating dbt's command line or web interface.",MINIMAL,0.61,1.3,6.4,-1.92,Yes,Yes,No,Yes,Yes,No,Yes,Yes,Yes,Yes,7187,17,3,5.0,usage; error_handling,Yes,No,,https://{multicell_account_prefix; https://metadata.{host
elastic,mcp-server-elasticsearch,148,6137,"Elasticsearch MCP server enables AI assistants to interact with Elasticsearch clusters through natural language conversations. Built with TypeScript and the official Elasticsearch client library, it provides tools for listing indices, inspecting field mappings, and executing full Query DSL searches with automatic highlighting of text fields. The implementation handles authentication via API keys, supports configurable security permissions, and is particularly valuable for users who need to explore and analyze their Elasticsearch data through conversational interfaces.",MINIMAL,1.43,1.7,7.7,-2.31,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,6086,14,8,5.0,,No,Yes,,
vast-ai-research,tripo-mcp,147,5851,"Tripo MCP provides a bridge between AI assistants and the Tripo 3D generation API, enabling the creation and manipulation of 3D models directly within conversation interfaces. Developed by VAST-AI-Research, this server implementation allows users to generate 3D assets from text descriptions, import models into Blender, and perform various operations on 3D objects through the Blender addon integration. The server exposes tools for creating models from text prompts, checking task status, importing GLB files, and manipulating scene objects - making it particularly valuable for 3D content creation workflows where users need to quickly prototype and visualize concepts without switching between applications.",MINIMAL,1.34,1.7,4.7,-1.41,Yes,Yes,Yes,Yes,No,No,No,Yes,Yes,No,1600,7,1,3.5,error_handling; license,No,Yes,,
crystaldba,postgres-mcp,146,6934,"PostgreSQL MCP is a database tuning and analysis tool that provides real-time insights into PostgreSQL performance. It offers tools for analyzing query execution plans, identifying slow queries, monitoring database health metrics, and recommending index optimizations. The server implements features like hypothetical index testing, transaction health monitoring, and buffer cache analysis, making it valuable for database administrators and developers who need to optimize query performance, troubleshoot bottlenecks, or maintain healthy PostgreSQL databases. Built with Python 3.12 and packaged as a Docker container, it supports both PostgreSQL 15 and 16 with a focus on read-only safety through restricted access modes.",MINIMAL,1.47,1.7,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,35985,40,15,5.0,,No,No,,
matthewdailey,figma-mcp,146,19954,"This MCP server, developed by Matthew Dailey, enables AI assistants to interact with Figma design files through the Figma REST API. Built in TypeScript, it allows adding Figma files to conversations, viewing nodes, reading and posting comments. The implementation integrates seamlessly with Claude Desktop and stands out by providing a direct bridge between AI models and Figma's collaborative design platform. By connecting AI capabilities with Figma's extensive design ecosystem, this server enables AI systems to analyze designs, provide feedback, and assist in the design process. It is particularly useful for scenarios like design reviews, generating design suggestions, and building AI assistants that can understand and contribute to visual design workflows.",MINIMAL,1.61,1.9,7.0,-2.1,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,No,2739,9,6,5.0,license,No,Yes,,
negokaz,excel-mcp-server,145,1983,"This Excel MCP server, developed by Kazuki Negoro, provides a bridge between Model Context Protocol and Microsoft Excel files. It enables reading and writing of spreadsheet data, specifically focusing on text values in xlsx format files. The implementation is designed for Node.js environments and leverages libraries like exceljs for Excel file manipulation. It's particularly useful for scenarios where AI assistants or other MCP-compatible clients need to interact with structured data stored in Excel spreadsheets, such as data analysis, report generation, or automated spreadsheet updates based on AI-driven insights.",MINIMAL,1.34,1.5,5.4,-1.62,Yes,Yes,No,No,No,No,Yes,Yes,Yes,Yes,4182,15,3,5.0,usage; api_reference; error_handling,No,No,,
recursechat,mcp-server-apple-shortcuts,145,0,"This MCP server, developed by recursechat, enables AI assistants like Claude to control Apple Shortcuts automations on macOS. Built with Node.js, it allows listing available shortcuts and running them by name with optional input parameters. The implementation provides a simple interface for automation control, integrating seamlessly with Claude Desktop. By connecting AI capabilities with Apple's powerful Shortcuts app, this server enables AI systems to trigger complex automations and perform tasks on macOS. It is particularly useful for scenarios like hands-free device control, automated workflow execution, and building AI assistants that can interact with and control macOS applications and system functions.",MINIMAL,1.12,1.3,5.9,-1.77,Yes,Yes,Yes,Yes,No,No,Yes,Yes,Yes,Yes,2343,8,6,5.0,error_handling; project_info,No,No,,
razorpay,razorpay-mcp-server,141,0,"Razorpay MCP Server provides a bridge between AI assistants and Razorpay's payment processing APIs, enabling seamless integration for payment operations. Built with Go, it exposes tools for managing payments, payment links, and orders through a clean abstraction layer over the Model Context Protocol. The server supports multiple transport mechanisms, features comprehensive logging, and includes a read-only mode for enhanced security. It's containerized for easy deployment in various environments including Claude Desktop and VS Code, making it particularly valuable for developers building AI-powered applications that need to interact with Razorpay's payment ecosystem without writing complex integration code.",MINIMAL,1.08,1.3,7.3,-2.19,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,4875,16,4,3.5,,No,No,,
mamertofabian,mcp-everything-search,140,19081,"This MCP server, developed by Mamerto Fabian, enables AI assistants to perform fast file searches using the Everything SDK on Windows systems. It provides a tool for executing complex file queries with support for wildcards, boolean operators, and various search criteria like file size, dates, and attributes. The server abstracts the Everything SDK's functionality, offering a simplified interface for AI systems to locate files and retrieve metadata. By connecting AI capabilities with Everything's ultra-fast file indexing, this implementation empowers AI assistants to quickly find and analyze files across entire drives. It is particularly useful for applications requiring rapid file discovery, system analysis, or any scenario where an AI system needs to efficiently locate and reason about files on a Windows machine.",MINIMAL,1.68,1.9,7.4,-2.22,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,6731,20,16,5.0,,No,No,,
egoist,fetch-mcp,139,16669,"Fetch-MCP provides a server for retrieving web content and YouTube video transcripts through two specialized tools. The implementation fetches URLs and converts HTML to Markdown by default, with options to return raw HTML or limit content length. It also extracts YouTube video transcripts with timestamps, making it useful for AI assistants that need to reference web content or video information. Built with TypeScript using the Model Context Protocol SDK, it supports both stdio and SSE server modes for flexible integration options.",MINIMAL,1.77,1.9,4.3,-1.29,Yes,No,Yes,Yes,No,No,Yes,Yes,No,Yes,544,10,1,5.0,installation; configuration; error_handling; project_info,No,No,,
manusa,kubernetes-mcp-server,139,0,"Powerful and flexible Kubernetes MCP server implementation.
Provides features to perform both, low-level and high-level operations on Kubernetes and OpenShift.
Lower level features include performing CRUD operations on any Kubernetes or OpenShift resource.
Higher level features include abstractions to run and deploy container images and exposing them. This is helpful for smaller models which don't have enough context to generate complete and valid Kubernetes resources.",MINIMAL,1.07,1.3,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,13282,39,7,5.0,,No,No,,
semgrep,mcp,138,0,"Semgrep MCP Server provides a comprehensive interface to Semgrep's static analysis capabilities through the Model Context Protocol, enabling AI assistants to scan code for security vulnerabilities and coding issues. Built by Semgrep, Inc., it offers tools for scanning individual code snippets or entire directories, creating custom rules, analyzing results by severity, and filtering findings. The server is containerized with Docker for easy deployment and can be integrated with Cursor as a plugin, making it valuable for developers who want to leverage Semgrep's security analysis capabilities directly within their AI assistant workflows without leaving their coding environment.",MINIMAL,1.09,1.3,7.0,-2.1,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,No,15240,35,19,3.5,error_handling; license,No,No,,
elsejj,mcp-cn-a-stock,137,0,"A specialized MCP server for Chinese stock market data analysis, providing tools to retrieve detailed stock information across different levels of depth (brief, medium, full). Built to integrate with a custom data feed system, it enables AI assistants to fetch comprehensive stock data including basic metrics, trading information, financial details, and technical analysis through a standardized interface.",MINIMAL,1.23,1.3,2.3,-0.69,Yes,No,No,No,No,No,No,No,Yes,No,829,9,0,3.5,installation; usage; configuration; api_reference; error_handling; license; project_info,No,No,,
mem0ai,mem0-mcp,136,0,"Mem0-MCP provides a structured approach for managing coding preferences through an MCP server that integrates with mem0.ai. Built with Python using the FastMCP framework, it offers three main tools: adding coding preferences with comprehensive context, retrieving all stored preferences, and semantically searching through preferences to find relevant code implementations, solutions, and documentation. The server runs as a persistent process that agents can connect to via SSE, making it ideal for cloud-native environments where server and clients operate as decoupled processes. This implementation is particularly valuable for developers using Cursor who need efficient storage and retrieval of code snippets and programming knowledge.",MINIMAL,1.0,1.3,6.8,-2.04,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,No,2587,8,7,3.5,license,No,Yes,,
jsonallen,perplexity-mcp,135,24202,"This Perplexity MCP server, developed by Jason Allen, provides AI assistants with web search capabilities using the Perplexity AI API. Built with Python using libraries like aiohttp and pydantic, it offers a streamlined interface for performing web searches and retrieving results. The server implements environment-based configuration for API key management and uses the Model Context Protocol to standardize interactions. By abstracting the complexities of API communication, it enables AI systems to easily incorporate up-to-date web information into their workflows. This implementation is particularly valuable for applications requiring real-time access to web data, facilitating use cases such as fact-checking, research assistance, and information retrieval across various domains.",MINIMAL,1.6,1.9,6.7,-2.01,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,3995,16,4,5.0,error_handling,No,Yes,,https://api.perplexity.ai/chat/completions
nickclyde,duckduckgo-mcp-server,134,84878,"This MCP server implementation provides web search capabilities through DuckDuckGo, with additional features for content fetching and parsing. Developed by Nick Clyde, it offers tools for performing web searches and retrieving webpage content, with built-in rate limiting and error handling. The server is designed to format results specifically for large language model consumption, making it particularly useful for AI applications that require up-to-date web information. It includes features like intelligent text extraction, comprehensive error logging, and LLM-friendly output formatting. The implementation is built using Python and integrates with the Model Context Protocol, focusing on ease of use within the Claude Desktop environment.",MINIMAL,1.88,2.1,7.2,-2.16,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,3568,19,6,5.0,,No,No,,
mshojaei77,reactmcp,133,0,"ReActMCP Web Search integrates Exa API's web search capabilities into AI assistant frameworks through the Model Context Protocol. It provides both basic and advanced search tools with filtering options for domains, text requirements, and date ranges, returning markdown-formatted results with titles, URLs, publication dates, and content summaries. Built with Python using the FastMCP framework, this implementation is particularly valuable for workflows requiring real-time internet information within AI conversations, allowing users to access current data without leaving their conversation interface.",MINIMAL,1.03,1.3,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,7818,20,9,5.0,,No,Yes,,
cyanheads,atlas-mcp-server,132,0,"ATLAS, developed by cyanheads, is a Model Context Protocol server that provides hierarchical task management capabilities to Large Language Models. It enables AI assistants to break down complex projects into manageable tasks, track progress, and maintain dependencies within an organized structure. The server implements rich content support, including markdown documentation, code snippets, and structured reasoning documentation. ATLAS stands out by offering a comprehensive task management system tailored for AI-driven project planning and execution. It is particularly useful for applications requiring sophisticated task organization, collaborative AI workflows, or any scenario where an AI system needs to manage and reason about complex, multi-step processes.",MINIMAL,1.17,1.3,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,21555,35,10,3.5,,Yes,No,Found pattern: collect.*data; Found pattern: tracking,https://community.datasync.dev; https://apps.apple.com/us/app/ecotrack; https://github.com/cyanheads/ecotrack-app; https://github.com/cyanheads/codementor-platform; https://codementor.dev
formulahendry,mcp-server-code-runner,131,3053,"Code Runner MCP Server enables AI assistants to execute code snippets in multiple programming languages directly within conversations. Built by Jun Han, it supports over 30 languages including JavaScript, Python, Ruby, Go, and more by creating temporary files and executing them with the appropriate interpreter. The server is designed for easy integration with VS Code and Claude Desktop through simple configuration, making it ideal for demonstrating code examples, testing algorithms, or exploring system information without leaving the conversation interface.",MINIMAL,1.32,1.5,6.0,-1.8,Yes,Yes,Yes,Yes,No,No,Yes,Yes,Yes,Yes,5389,11,5,5.0,error_handling; project_info,No,No,,
g0t4,mcp-server-commands,130,9002,"This MCP server, developed by g0t4, enables AI assistants to execute system commands and run scripts on the host machine. It provides tools for running individual shell commands and executing multi-line scripts in various languages like bash, fish, and Python. Built in JavaScript, the implementation exposes local system functionality via a standardized MCP interface, allowing Claude to interact directly with the host operating system. By bridging AI models with the local command line, this server enhances Claude's ability to perform system administration tasks, automate workflows, and execute code snippets. It is particularly useful for developers and power users seeking AI-powered assistance with command-line operations, scripting, and system automation tasks. The implementation emphasizes security, recommending careful review of commands before execution.",MINIMAL,1.5,1.7,6.7,-2.01,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,2992,9,6,5.0,project_info,No,No,,
quantgeekdev,mongo-mcp,128,10739,"This MongoDB MCP server, developed by QuantGeekDev, enables AI assistants to interact directly with MongoDB databases through natural language. Built with TypeScript, it provides tools for querying collections, inspecting schemas, managing indexes, and performing document operations. The server leverages MongoDB's flexible document model and powerful query capabilities, allowing AI models to explore and manipulate complex data structures. By bridging natural language processing with MongoDB's features, this implementation extends AI capabilities for tasks like data analysis, content management, and database administration. It is particularly useful for scenarios requiring dynamic data exploration, schema inference, and performing database operations in response to natural language queries.",MINIMAL,1.68,1.9,7.4,-2.22,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,4251,22,9,5.0,error_handling,No,No,,
domdomegg,airtable-mcp-server,127,14982,"This MCP server, developed by domdomegg, enables AI assistants like Claude to interact with Airtable databases. Built in TypeScript, it provides capabilities for querying and modifying Airtable bases, tables, fields, and records through a standardized interface. The implementation stands out by offering full read/write access to Airtable's rich data model and metadata. By connecting AI capabilities with structured data in Airtable, this server allows AI systems to analyze, manipulate, and act on user-defined datasets. It is particularly useful for automating data entry workflows, building AI-powered data analysis tools, or creating natural language interfaces to Airtable-based applications.",MINIMAL,1.6,1.9,6.8,-2.04,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,6742,7,1,3.5,error_handling,No,Yes,,
fengin,image-gen-server,127,0,"This MCP server, developed by an unknown author, provides a lightweight implementation for handling MCP requests. Built with Python and leveraging the aiohttp and aiofiles libraries, it offers asynchronous capabilities for efficient request processing. The server focuses on basic functionality, utilizing the fastmcp and mcp libraries for core MCP operations. It's designed for developers who need a simple, customizable MCP server solution, enabling use cases such as prototyping MCP-based applications, testing MCP integrations, or serving as a foundation for more complex MCP implementations.",MINIMAL,1.1,1.3,6.6,-1.98,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,4181,14,9,3.5,error_handling,Yes,Yes,,https://aibook.ren; https://github.com/fengin/image-gen-server.git
sdglbl,mcp-claude-code,127,0,"MCP Claude Code enables Claude to directly execute code-related tasks through the Model Context Protocol, providing functionality similar to Claude Code. Developed by SDGLBL, it implements tools for code understanding, modification, command execution, and file operations with proper security controls. The server integrates seamlessly with Claude Desktop, allowing users to analyze codebases, make targeted edits, run commands in various shells, and execute scripts in multiple programming languages. This implementation is particularly valuable for developers seeking AI assistance with code modifications and project management without leaving their conversation interface.",MINIMAL,1.11,1.3,6.4,-1.92,Yes,Yes,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,4187,8,0,3.5,,Yes,Yes,,
cr7258,elasticsearch-mcp-server,123,0,"This Elasticsearch MCP server implementation provides a standardized interface for interacting with Elasticsearch clusters through natural language. Developed to bridge the gap between large language models and Elasticsearch, it offers tools for index operations, document searching, and cluster management. The server leverages Docker for easy deployment of a 3-node Elasticsearch cluster with Kibana, and integrates seamlessly with Claude Desktop via a simple configuration. It's particularly useful for developers and data analysts who want to explore and manipulate Elasticsearch data using conversational AI, enabling natural language queries for complex search operations and cluster insights without requiring in-depth Elasticsearch expertise.",MINIMAL,1.0,1.3,6.5,-1.95,Yes,Yes,Yes,Yes,No,No,Yes,Yes,Yes,Yes,5261,19,5,5.0,error_handling,No,Yes,,
fatwang2,search1api-mcp,123,7300,"This Search1API MCP server, developed by fatwang2, provides an interface for AI assistants to perform web searches, news searches, content extraction, and sitemap retrieval using the Search1API service. It enables AI agents to query Search1API and retrieve structured results through a controlled MCP server. Built in JavaScript, the implementation handles API authentication and request formatting for multiple Search1API endpoints. By leveraging Search1API's capabilities, this server allows AI systems to access real-time web information, news articles, and site structures in a safe manner. It is particularly useful for AI assistants needing to conduct web research, analyze current events, or extract content from websites while maintaining a clear separation between the AI model and external data sources.",MINIMAL,1.43,1.7,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,9832,18,13,3.5,,No,Yes,,
motherduckdb,mcp-server-motherduck,123,32313,"This MCP server, developed by tdoehmen at MotherDuck, provides seamless integration with MotherDuck and local DuckDB databases. Built with Python, it offers tools for initializing database connections, retrieving schema information, and executing queries. The implementation stands out by supporting both cloud-based MotherDuck and local DuckDB instances, allowing flexible deployment options. It's particularly useful for data analysts, researchers, and developers who need to incorporate on-demand access to DuckDB-powered databases into their AI-assisted workflows, enabling dynamic querying and analysis of structured data within MCP-compatible environments like Claude Desktop.",MINIMAL,1.67,1.9,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,11000,21,13,5.0,,No,No,,
furey,mongodb-lens,122,0,"MongoDB Lens is an MCP server that provides AI assistants with direct access to MongoDB databases for exploration and analysis. Built with Node.js and the Model Context Protocol SDK, it enables browsing databases and collections, executing queries with filters and projections, running aggregation pipelines, analyzing schemas, managing indexes, and optimizing query performance. The implementation includes specialized tools for inferring collection schemas, explaining query execution plans, and generating recommendations for database optimization, making it valuable for database exploration, performance tuning, and schema design assistance within AI workflows.",MINIMAL,1.07,1.3,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,67134,99,65,5.0,,No,No,,
hyperb1iss,droidmind,121,0,"DroidMind enables AI assistants to control and interact with Android devices through a secure, standardized interface. Built with Python and the Model Context Protocol, it provides tools for device management, app installation, UI automation, file operations, and system diagnostics. The implementation features a robust security layer that prevents dangerous operations, supports both stdio and SSE transport modes, and includes comprehensive test coverage. DroidMind is particularly valuable for developers, testers, and power users who need to debug, analyze, or control Android devices directly through conversational AI without switching to dedicated ADB tools.",MINIMAL,1.07,1.3,7.7,-2.31,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,9307,23,5,5.0,,No,No,,
blurrah,mcp-graphql,120,0,"This MCP server, developed by an unnamed author, provides a GraphQL interface for AI assistants. Built with TypeScript and leveraging the Model Context Protocol SDK, it offers a tool for querying GraphQL servers. The implementation currently uses a mock schema response for development purposes, but is designed to connect to actual GraphQL endpoints. It abstracts the complexities of GraphQL communication, allowing AI systems to easily interact with GraphQL APIs. This server is particularly useful for applications requiring flexible data querying and manipulation, enabling AI assistants to access and analyze structured data from various GraphQL sources. Its generic design allows it to work with any GraphQL schema, making it versatile for different data-driven use cases.",MINIMAL,1.1,1.3,6.6,-1.98,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,3439,15,3,5.0,error_handling,No,No,,
jacksteamdev,obsidian-mcp-tools,120,0,"This Obsidian MCP tools collection, developed by 2XR, provides a set of Model Context Protocol utilities tailored for integration with the Obsidian note-taking application. Built using TypeScript and leveraging modern JavaScript features, it offers a modular structure with workspaces for different tools. The implementation focuses on enhancing Obsidian's capabilities through AI-powered functionalities, potentially including features like intelligent note linking, content generation, or knowledge graph analysis. By bridging Obsidian's powerful note organization system with MCP's standardized AI communication, this toolkit enables users to augment their personal knowledge management workflows with advanced AI assistance. It is particularly suited for researchers, writers, and knowledge workers looking to leverage AI within their existing Obsidian setups for tasks such as information synthesis, idea generation, and content organization.",MINIMAL,1.03,1.3,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,8775,24,7,5.0,,No,Yes,,
chroma-core,chroma-mcp,119,23120,"Chroma MCP Server provides vector database integration for LLM applications, enabling AI models to create and manage collections of data with vector search capabilities. Built by Chroma Core, it supports multiple client types (ephemeral, persistent, HTTP, and cloud), offers comprehensive collection management tools, and enables document operations including adding, querying, and retrieving with advanced filtering options. The implementation integrates seamlessly with Claude Desktop through simple configuration options and supports environment variables for flexible deployment, making it ideal for workflows requiring memory capabilities such as knowledge bases and context-aware conversations.",MINIMAL,1.61,1.9,7.1,-2.13,Yes,No,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,7813,13,5,5.0,installation; error_handling,No,Yes,,
fradser,mcp-server-mas-sequential-thinking,119,7630,"Sequential Thinking Multi-Agent System (MAS) implements a coordinated team of specialized AI agents to break down complex problems through structured thinking steps. Built by Frad LEE using the Agno framework and DeepSeek models, this server orchestrates a Team Coordinator, Strategic Planner, Researcher (with Exa search capabilities), Core Analyzer, Quality Controller, and Integration Specialist working in parallel to process thoughts with greater depth than single-agent approaches. The implementation supports revision steps, branching analysis paths, and provides detailed guidance throughout the thinking process, making it particularly valuable for multi-disciplinary problem solving requiring diverse expertise and comprehensive analysis.",MINIMAL,1.43,1.7,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,18589,18,14,3.5,,No,Yes,,
bigcodegen,mcp-neovim-server,118,2415,"This Neovim MCP server, developed by Derek White (bigcodegen), integrates Claude Desktop with Neovim using the Model Context Protocol and the official neovim/node-client library. It leverages Vim's native text editing commands to create a lightweight code assistance layer, allowing AI to interact directly with Neovim sessions. The server connects to a running Nvim instance, providing tools to view and edit buffers, execute Vim commands, and retrieve editor status. By abstracting Neovim's complexities, it enables AI assistants to seamlessly work within the familiar Vim environment. This implementation is particularly useful for developers seeking AI-enhanced coding assistance within their preferred text editor, facilitating tasks such as code review, refactoring, and context-aware suggestions without leaving the Neovim ecosystem.",MINIMAL,1.31,1.5,6.3,-1.89,Yes,No,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,4068,10,1,3.5,installation,No,No,,
hellokaton,unsplash-mcp-server,117,0,"Unsplash MCP Server provides AI assistants with access to the Unsplash photo library through a simple search interface. Built with Python using the FastMCP framework, it enables searching for high-quality images by keyword with additional filtering options for color, orientation, and sorting preferences. The implementation authenticates with the Unsplash API using environment variables and returns structured photo data including image URLs, dimensions, and descriptions. This server is particularly useful for workflows requiring visual content integration, allowing AI assistants to find and reference relevant imagery directly within conversations.",MINIMAL,1.1,1.3,6.6,-1.98,Yes,Yes,No,Yes,No,No,Yes,Yes,Yes,Yes,3525,17,6,5.0,usage; error_handling,No,No,,
timholden,figma-mcp-server,117,0,"This Figma MCP server, developed by TimHolden, provides a robust interface to the Figma API for managing design system elements. Built with TypeScript, it offers comprehensive variable management, file operations, component handling, and collaboration features. The server implements variable validation, batch operations, and support for variable modes and scopes. By abstracting Figma API interactions into a standardized MCP interface, it enables AI systems to easily manipulate and analyze design assets. This implementation is particularly valuable for design teams and developers working with Figma, facilitating use cases such as design system management, automated style updates, and collaborative design workflows across various project scales.",MINIMAL,0.57,1.3,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,7371,25,9,5.0,,Yes,No,,
dvcrn,mcp-server-siri-shortcuts,116,879,"This MCP server provides access to Siri shortcuts functionality on macOS, allowing AI assistants to list, open, and run shortcuts from the Shortcuts app. It dynamically generates tools for each available shortcut, exposing all shortcuts to the LLM for flexible automation. The server uses the macOS 'shortcuts' CLI command under the hood and supports both direct text input and file-based input for shortcut execution.",MINIMAL,1.13,1.3,5.8,-1.74,Yes,No,Yes,Yes,No,Yes,Yes,Yes,Yes,No,1909,7,2,3.5,installation; license,No,No,,
burningion,video-editing-mcp,114,19222,"This MCP server, developed by Kirk Kaiser, enables AI-assisted video editing and searching using the Video Jungle API. It provides tools for adding videos, searching video content using embeddings, and generating edits from single or multiple video files. The implementation is built in Python 3.11+ and integrates with libraries like einops, timm, and transformers for advanced video processing capabilities. It's designed for content creators and video editors who want to leverage AI to streamline their workflow, allowing for natural language queries to find relevant video clips and automate editing tasks. The server also includes an optional feature to search local video files on macOS, making it versatile for both cloud-based and local video management.",MINIMAL,1.63,1.9,7.7,-2.31,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,6571,14,17,5.0,,No,Yes,,https://app.video-jungle.com/projects/{proj.id; https://api.video-jungle.com/video-file/embedding-search; https://app.video-jungle.com/projects/{project_id
opendatamcp,opendatamcp,113,12369,"OpenDataMCP, developed by the OpenDataMCP organization, connects open datasets to large language models through the Model Context Protocol. It provides a CLI tool for easy setup of MCP servers that expose public data sources, starting with integration for Claude AI. The implementation focuses on simplicity and standardization, using Python with minimal dependencies. OpenDataMCP aims to make millions of open government, NGO, and company datasets accessible to AI applications. It enables use cases like querying transportation data, analyzing public records, or incorporating open statistics into AI-assisted research and analysis tasks. The project is community-driven, allowing contributors to easily add new data sources using provided templates and guidelines.",MINIMAL,1.67,1.9,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,9589,32,7,5.0,configuration,No,No,,
ee0pdt,godot-mcp,112,0,"This MCP server implementation provides integration between Godot and the Model Context Protocol, allowing access to the currently open script in the Godot editor. Developed as a TypeScript server with a Godot editor plugin, it enables AI assistants like Claude to interact with Godot scripts, supporting features such as reading current scripts, listing project scripts, and updating script information. The implementation is designed for game developers and AI researchers looking to enhance their Godot development workflow with AI assistance.",MINIMAL,1.09,1.3,7.0,-2.1,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,5313,26,7,5.0,,No,No,,
neka-nat,freecad-mcp,112,11962,"FreeCAD MCP enables AI-driven CAD modeling by providing a remote procedure call (RPC) server that allows Claude Desktop to control FreeCAD programmatically. Developed by neka-nat, this implementation supports operations like creating documents, inserting parts from libraries, editing objects, and executing arbitrary Python code, making it powerful for generative design and automated 3D modeling workflows.",MINIMAL,1.74,1.9,5.2,-1.56,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,No,2827,11,5,3.5,error_handling; license; project_info,No,No,,
sirmews,mcp-pinecone,112,19298,"This MCP server, developed by sirmews, enables AI assistants like Claude to interact with Pinecone vector databases for retrieval-augmented generation (RAG) applications. Built with Python, it provides tools for semantic search, document retrieval, and document upsert operations on Pinecone indexes. The implementation stands out by leveraging Pinecone's inference API for embedding generation, simplifying the architecture. By connecting AI capabilities with Pinecone's efficient vector search, this server allows AI systems to augment their knowledge with relevant information from large document collections. It is particularly useful for building AI applications that require real-time access to up-to-date information, such as question-answering systems, chatbots with domain-specific knowledge, or AI-powered research assistants.",MINIMAL,1.61,1.9,6.9,-2.07,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,Yes,Yes,5837,16,10,5.0,usage,No,Yes,,
taida957789,ida-mcp-server-plugin,112,0,"IDA Pro MCP Server enables AI assistants to interact directly with IDA Pro for binary analysis tasks. This plugin provides a comprehensive set of tools for remote querying and control, allowing AI systems to examine byte data, retrieve disassembly code, access decompiled pseudocode, query function information, and perform various binary analysis operations. Running locally on port 3000, it creates a bridge between AI assistants like Claude and IDA Pro's powerful reverse engineering capabilities, making it particularly valuable for automated malware analysis, vulnerability research, and collaborative reverse engineering projects.",MINIMAL,1.08,1.3,7.2,-2.16,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,4423,8,2,5.0,error_handling,No,No,,
HEAD,filesystem,111,0,"This Quarkus-based MCP server implementation provides a filesystem interface for AI models. Developed by the Quarkus team, it leverages Quarkus' fast startup and low memory footprint to offer efficient file system operations. The server includes dependencies for Jackson JSON processing, Qute templating, and Arc dependency injection. It supports both JVM and native compilation modes, with a Maven wrapper for easy building and running. This implementation is ideal for scenarios requiring AI models to interact with local file systems, such as automated file management, content organization, or data processing tasks, while benefiting from Quarkus' performance optimizations.",MINIMAL,1.3,1.3,0,-0.0,No,No,No,No,No,No,No,No,No,No,0,0,0,0,,No,No,,
HEAD,jdbc,111,0,"This Model Context Protocol server, developed by the Quarkus team, enables AI models to interact with databases through JDBC connections. Built using Quarkus and JBang, it provides tools for querying, modifying, and exploring database content with just a JDBC URL. The implementation focuses on simplicity and flexibility, supporting various database types including in-memory, downloadable, and live databases. It's particularly useful for AI-assisted database management tasks, allowing models to perform operations like data analysis, schema exploration, and content manipulation across different database systems without needing direct access to the underlying infrastructure. The server's design makes it adaptable for various use cases where AI needs to interact with structured data, such as automated reporting, data migration, or dynamic query generation.",MINIMAL,1.3,1.3,0,-0.0,No,No,No,No,No,No,No,No,No,No,0,0,0,0,,No,No,,
xgenerationlab,xiyan_mcp_server,110,0,"XiYan MCP Server enables AI assistants to interact with MySQL databases through natural language queries using XiYanSQL. Developed by Zhiling Luo, this server provides capabilities to list tables, read data, and execute SQL queries in a controlled, secure environment. It integrates with LLM APIs for natural language processing and requires minimal configuration through environment variables, making it particularly valuable for database exploration and analysis workflows where direct SQL access might be risky or impractical.",MINIMAL,1.01,1.3,7.0,-2.1,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,13826,28,20,5.0,error_handling,No,Yes,,
burtthecoder,mcp-maigret,109,2913,"This MCP server, developed by BurtTheCoder, enables AI assistants like Claude to leverage the OSINT capabilities of Maigret. Built in JavaScript/TypeScript, it provides functionality for searching usernames across social networks and analyzing URLs. The implementation stands out by offering Docker-based execution, multiple output formats, and site filtering options. By connecting AI capabilities with Maigret's extensive data collection, this server allows AI systems to gather and process publicly available user information programmatically. It is particularly useful for building AI-powered tools for social media research, identity verification, and open-source intelligence gathering that require ethical and responsible use of public data sources.",MINIMAL,1.27,1.5,7.7,-2.31,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,5626,17,9,5.0,,No,No,,
gannonh,firebase-mcp,108,7032,"Firebase MCP server provides a standardized interface for AI assistants to interact with Firebase services including Authentication, Firestore, and Storage. Built by Gannon Hall, this TypeScript implementation enables LLM clients to perform user management, document database operations, and file storage tasks through a consistent set of MCP tools. Particularly useful for developers building AI-powered applications that require seamless integration with Firebase's backend services.",MINIMAL,0.97,1.7,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,9013,39,12,3.5,,Yes,No,,https://firebasestorage.googleapis.com/v0/b/test-bucket/o/path%2Fwith%20spaces%2Fand%2Bspecial%26chars.txt?alt=media; https://firebasestorage.googleapis.com/v0/b/test-bucket/o/file.xyz123?alt=media; https://firebasestorage.googleapis.com/v0/b/test-bucket/o/?alt=media; https://firebasestorage.googleapis.com/v0/b/${bucketName; https://example.com/document.pdf
spences10,mcp-sequentialthinking-tools,108,9239,"This MCP server for Sequential Thinking Tools, developed by Scott Spence, provides a structured approach to problem-solving and decision-making processes. Built with TypeScript and leveraging the Model Context Protocol SDK, it offers tools for step-by-step analysis, branching thoughts, and adaptive thinking strategies. The implementation focuses on guiding AI models through complex reasoning tasks, with features for tool recommendation and confidence assessment. It's particularly useful for AI assistants and applications needing to break down problems, plan solutions, and conduct reflective analysis, enabling use cases such as strategic planning, troubleshooting, and multi-step decision making without relying on predefined problem-solving frameworks.",MINIMAL,1.51,1.7,6.4,-1.92,Yes,Yes,Yes,Yes,No,No,Yes,Yes,Yes,Yes,5924,15,9,3.5,error_handling,No,No,,
tonypan2,minesweeper-mcp-server,108,0,"Minesweeper MCP Server provides a bridge between Claude and a Minesweeper game server, allowing AI assistants to play the classic puzzle game through a set of tools. Built by tonypan2, it communicates with a locally running game server via HTTP requests, translating game actions (start, click, flag, unflag) into API calls and returning the game state as images. The server is designed for integration with Claude Desktop through its configuration system, making it ideal for demonstrating AI problem-solving capabilities in a visual game environment without requiring the assistant to leave the conversation interface.",MINIMAL,1.17,1.3,4.3,-1.29,Yes,Yes,Yes,No,No,No,Yes,Yes,Yes,No,2092,7,3,3.5,api_reference; error_handling; license; project_info,No,No,,
huccihuang,bilibili-mcp-server,107,0,"Bilibili MCP Server provides a simple interface to the Bilibili API, enabling search functionality across the popular Chinese video platform. Built with FastMCP, it exposes a single tool that allows querying the Bilibili search API with optional authentication via session data cookies. The implementation is lightweight, requiring only Python 3.12 and minimal dependencies (mcp[cli] and requests), making it ideal for workflows that need to retrieve video content, user information, or other searchable data from Bilibili without leaving the conversation interface.",MINIMAL,1.21,1.3,3.0,-0.9,Yes,No,No,Yes,No,No,Yes,Yes,No,Yes,904,6,2,3.5,installation; usage; configuration; error_handling; project_info,No,No,,
jae-jae,g-search-mcp,105,7897,"G-Search MCP is a powerful server for performing parallel Google searches with multiple keywords simultaneously, using Playwright to automate browser interactions. Developed by jae-jae, it features intelligent CAPTCHA detection with automatic switching to visible browser mode when verification is needed, browser state persistence to reduce detection likelihood, and user behavior simulation to mimic real browsing patterns. The implementation includes robust error handling, configurable search parameters (result limits, timeouts, locales), and returns structured JSON results, making it ideal for applications requiring efficient batch searching or when AI assistants need direct access to search engine results without triggering anti-bot measures.",MINIMAL,1.48,1.7,7.3,-2.19,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,5411,20,16,5.0,,No,No,,
jkf87,hwp-mcp,105,0,"HWP MCP Server provides a bridge between AI assistants and Hangul Word Processor (HWP) documents, enabling document manipulation through a standardized interface. The implementation supports both Python (Flask-based) and Node.js versions, utilizing the HWP COM interface via pywin32 or winax respectively to control document operations. This server allows AI assistants to create, edit, and format Korean documents in the proprietary HWP format, making it particularly valuable for workflows involving Korean language document processing that require direct interaction with the Hangul Office suite.",MINIMAL,1.1,1.3,6.6,-1.98,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,3469,27,10,5.0,error_handling; project_info,No,No,,
openbnb-org,mcp-server-airbnb,105,48541,"This MCP server provides AI assistants with access to Airbnb's search and listing details functionality without requiring API keys. Built with TypeScript using the Model Context Protocol SDK, it offers two main tools: airbnb_search for finding vacation rentals with various filters, and airbnb_listing_details for retrieving comprehensive information about specific properties. The implementation respects robots.txt rules by default (with an option to bypass), uses cheerio for HTML parsing, and processes the data to reduce context load by flattening arrays and cleaning objects. Developed by OpenBnB, it's ideal for travel planning use cases where users need to explore accommodation options and compare listing details.",MINIMAL,1.73,1.9,5.8,-1.74,Yes,Yes,No,Yes,Yes,No,Yes,Yes,Yes,Yes,2668,9,4,5.0,usage; error_handling,No,No,,
rishikavikondala,mcp-server-aws,105,0,"This MCP server, developed by Rishika Vikondala, enables AI assistants like Claude to interact with AWS resources, specifically S3 and DynamoDB services. It provides tools for common operations such as creating/deleting S3 buckets, uploading/downloading objects, and performing CRUD operations on DynamoDB tables and items. The server integrates with the AWS SDK and automatically logs all operations, making them accessible through an audit endpoint. By bridging AI capabilities with AWS infrastructure management, this implementation facilitates easier cloud resource manipulation and monitoring. It is particularly useful for DevOps teams automating AWS workflows, developers needing quick access to cloud resources, or system administrators performing routine maintenance tasks through AI-assisted interactions.",MINIMAL,1.1,1.3,6.7,-2.01,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,3725,11,2,5.0,,No,No,,
newideas99,deepseek-thinking-claude-3.5-sonnet-cline-mcp,105,0,"This RAT (Retrieval Augmented Thinking) MCP server, developed by Skirano, implements a two-stage reasoning process combining DeepSeek's analysis capabilities with various response models. Built with TypeScript and leveraging the Model Context Protocol SDK, it offers flexible model selection, persistent conversation context, and customizable reasoning visibility. The implementation focuses on enhancing AI responses through structured reasoning, with features like context management and multi-model support. It's particularly useful for developers and researchers working on improving AI conversation quality, enabling use cases such as more thoughtful chatbots, enhanced question-answering systems, and AI-assisted analysis tasks without directly dealing with individual API complexities.",MINIMAL,1.01,1.3,6.9,-2.07,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,5689,16,10,5.0,error_handling,No,Yes,,
pyroprompts,any-chat-completions-mcp,104,0,"This MCP server, developed by pyroprompts, enables AI assistants to interact with any OpenAI SDK-compatible chat completion API, including OpenAI, Perplexity, Groq, xAI, and PyroPrompts. It provides a single 'chat' tool that relays questions to the configured AI provider and returns responses. Built in TypeScript, the implementation offers a flexible way to integrate various AI models into Claude Desktop through a standardized MCP interface. By abstracting away provider-specific details, this server allows easy switching between different AI services without changing the core integration. It is particularly useful for users who want to leverage multiple AI providers within Claude, experiment with different models, or avoid vendor lock-in while maintaining a consistent interaction pattern.",MINIMAL,1.1,1.3,6.5,-1.95,Yes,Yes,No,Yes,No,Yes,Yes,Yes,Yes,Yes,3999,6,7,5.0,usage,No,No,,
ccq1,awsome_kali_mcpservers,103,0,"Awesome Kali MCP Servers provides a secure interface for AI assistants to execute Kali Linux security tools through a sandboxed environment. The implementation wraps common security utilities including nmap for network scanning, objdump and nm for binary analysis, strings for file examination, and wireshark/tshark for packet analysis. Built with Python using Docker containers for isolation, it enforces configurable resource limits and network access controls to prevent abuse while maintaining tool functionality. This server enables AI systems to perform security analysis tasks like vulnerability scanning, binary reverse engineering, and network traffic inspection without direct system access, making it valuable for security professionals who want to leverage AI assistants for technical security operations.",MINIMAL,1.1,1.3,6.7,-2.01,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,4968,14,2,3.5,error_handling,No,No,,
jingcheng-chen,rhinomcp,103,0,"RhinoMCP is a plugin for Rhino 8 that implements the Model Context Protocol, enabling AI assistants to interact with Rhino's 3D modeling environment. The plugin creates a server that exposes Rhino's functionality through MCP, allowing for programmatic control of modeling operations. Built on the C# SDK for MCP, it features start and stop commands to manage the server connection, making it useful for automating design workflows and enabling conversational interfaces to control Rhino.",MINIMAL,1.03,1.3,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,5477,27,4,5.0,,No,Yes,,
maquina-app,rails-mcp-server,103,0,"Rails MCP Server provides a Ruby implementation that allows LLMs to interact with Rails projects through a standardized protocol. It enables AI models to browse project files, view routes, inspect models, and retrieve database schema information across multiple Rails applications. The server follows the XDG Base Directory Specification for configuration, includes tools for project navigation and codebase exploration, and integrates seamlessly with Claude Desktop through either an automated setup script or manual configuration. Particularly valuable for developers seeking AI assistance with Rails application analysis, understanding, and exploration without leaving their conversation interface.",MINIMAL,1.07,1.3,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,13808,41,35,5.0,,No,No,,
weaviate,mcp-server-weaviate,103,0,"Bring intuitive AI-native applications to life with less hallucination, data leakage, and vendor lock-in with the open source vector database developers love.",MINIMAL,0.97,1.3,5.6,-1.68,Yes,Yes,Yes,Yes,No,No,Yes,Yes,Yes,Yes,1425,6,2,5.0,error_handling; project_info,No,Yes,,
ktanaka101,mcp-server-duckdb,102,17400,"This DuckDB MCP server, developed by ktanaka101, provides a flexible interface for language models to interact with DuckDB databases. It enables AI agents to execute SQL queries, create tables, and inspect schemas through a controlled interface. The server can be run in read-only mode for enhanced security and integrates with Claude Desktop. By leveraging DuckDB's column-oriented architecture, it allows AI systems to efficiently analyze large datasets locally. This implementation is particularly useful for AI assistants designed to perform ad-hoc data analysis, generate insights from local files, or provide data-driven recommendations using DuckDB as a high-performance analytical database backend.",MINIMAL,1.69,1.9,7.0,-2.1,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,Yes,Yes,4446,18,3,5.0,usage,No,No,,
tiberriver256,mcp-server-azure-devops,102,0,"This MCP server implementation provides a bridge between AI assistants and Azure DevOps, enabling interaction with projects, work items, repositories, pull requests, branches, and pipelines. Developed by Tiberriver256, it offers tools for managing Azure DevOps resources and automating development workflows. The server is designed for DevOps teams looking to enhance their Azure-based processes with AI-driven assistance, supporting use cases like automated code reviews, work item management, and CI/CD pipeline optimization.",MINIMAL,1.08,1.3,7.4,-2.22,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,9246,28,2,3.5,,No,No,,https://dev.azure.com/org-name-2; https://almsearch.dev.azure.com/${organization; https://dev.azure.com/mock-org; https://dev.azure.com/test-org; https://almsearch.dev.azure.com/mock-org/mock-project/_apis/search/workitemsearchresults?api-version=7.1
0xkoda,wiremcp,100,0,"WireMCP is a network analysis server that empowers LLMs with real-time traffic monitoring capabilities by leveraging Wireshark's tshark utility. Developed by 0xKoda, it provides five specialized tools for capturing and analyzing network data: raw packet capture, protocol statistics, conversation tracking, and threat detection through URLhaus blacklist integration. The implementation automatically locates tshark across different operating systems, handles large packet captures by intelligently trimming output, and presents results in structured formats optimized for LLM comprehension. Ideal for security analysts using AI assistants for threat hunting, network diagnostics, and anomaly detection without requiring direct access to network monitoring tools.",MINIMAL,1.08,1.3,7.4,-2.22,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,4947,14,6,3.5,,No,No,,
ccabanillas,notion-mcp,99,0,"This Notion MCP server, developed by Chase Cabanillas, integrates Notion's API with the Model Context Protocol, enabling AI-assisted workflows to interact with Notion databases and pages. Built with Python and leveraging libraries like httpx and pydantic, it exposes Notion operations as MCP resources and tools, including database listing, querying, page creation/updating, and search functionality. The implementation focuses on asynchronous operations, proper error handling, and adherence to MCP specifications. It's particularly useful for developers and teams looking to incorporate Notion's organizational capabilities into AI-driven applications, allowing for dynamic content management and retrieval within Notion workspaces.",MINIMAL,0.72,1.0,7.5,-2.25,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,3742,13,9,5.0,,No,Yes,,
scorzeth,anki-mcp-server,99,0,"This Anki MCP server, developed as an open-source project, provides AI assistants with a bridge to interact with locally running Anki instances. It leverages the Anki-Connect add-on to offer tools for reviewing and creating flashcards, as well as retrieving cards from various decks. Built with TypeScript and the @modelcontextprotocol/sdk, it implements resource management for card retrieval, tools for card manipulation, and prompts for high-quality card creation based on Andy Matuschak's principles. The server abstracts Anki's complexities, allowing AI systems to seamlessly incorporate spaced repetition and flashcard management into their workflows. It's particularly useful for students, educators, and lifelong learners looking to enhance their study routines with AI-driven flashcard creation and review processes.",MINIMAL,0.85,1.0,5.1,-1.53,Yes,Yes,No,Yes,No,Yes,Yes,Yes,Yes,No,2144,6,5,3.5,usage; license; project_info,No,No,,
danilop,mcp2lambda,97,0,"MCP2Lambda enables Large Language Models to interact with AWS Lambda functions as tools without code changes. It acts as a bridge between MCP clients and Lambda functions, allowing models to access private resources, interact with AWS services, and leverage Lambda's capabilities for data processing and external API access. The implementation includes autodiscovery of Lambda functions and secure invocation, making it useful for extending AI capabilities in enterprise environments with existing AWS infrastructure.",MINIMAL,0.77,1.0,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,9042,22,16,5.0,error_handling,No,No,,
src,mcp,97,4400,"Lokka is an MCP server that provides a bridge between AI assistants and Microsoft Graph API, enabling natural language interaction with Microsoft 365 tenants. Developed by Merill Fernando, it allows users to query and manage their Microsoft environment through simple conversational prompts rather than complex API calls. The server authenticates with Microsoft Entra using client credentials, translates natural language requests into appropriate Graph API calls, and returns formatted results. Particularly valuable for administrators who need to perform tasks like creating security groups, reviewing conditional access policies, or managing Intune configurations without leaving their AI assistant interface.",MINIMAL,1.2,1.2,0,-0.0,No,No,No,No,No,No,No,No,No,No,0,0,0,0,,No,No,,
taazkareem,clickup-mcp-server,97,27837,"This ClickUp MCP server, developed by Talib Kareem, integrates ClickUp task management with AI systems through the Model Context Protocol. Built with TypeScript and leveraging the MCP SDK, it provides a standardized interface for AI models to interact with ClickUp tasks, enabling automated task creation, updates, and retrieval. The implementation focuses on simplifying project management workflows and enhancing productivity by allowing AI assistants to manage tasks programmatically. It's particularly useful for teams looking to automate routine task management, generate task summaries, or incorporate AI-driven insights into their project workflows, bridging the gap between task management and AI capabilities.",MINIMAL,1.12,1.6,7.5,-2.25,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,20032,12,1,5.0,,No,Yes,Found pattern: tracking,https://github.com/taazkareem/clickup-mcp-server#readme; https://github.com/taazkareem/clickup-mcp-server/issues; https://github.com/taazkareem/clickup-mcp-server.git; https://api.clickup.com/api/v2
blackwhite084,playwright-plus-python-mcp,96,0,"This Playwright-powered MCP server, developed by YUNYING, enables AI assistants to interact with web browsers through the Model Context Protocol. Built in Python, it provides a bridge between MCP clients and Playwright's browser automation capabilities, allowing operations like navigation, screenshots, clicks, and JavaScript execution. The implementation leverages libraries such as MCP for protocol handling and Playwright for browser control. By abstracting browser interactions into MCP-compatible tools, it allows AI systems to easily perform web automation tasks without directly handling browser complexities. This server is particularly useful for scenarios requiring AI-driven web scraping, testing, or content generation, facilitating use cases such as automated data collection, UI testing, and dynamic web content creation.",MINIMAL,0.8,1.0,6.6,-1.98,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,Yes,No,4198,12,6,5.0,usage; license,No,No,,
chigwell,telegram-mcp,94,0,"Telegram MCP Server provides a bridge between Claude and Telegram messaging, enabling direct interaction with Telegram chats without leaving the conversation interface. Built using Python, Telethon, and the MCP Python SDK, it exposes three core tools: retrieving chat lists, fetching messages from specific chats, and sending messages to contacts. The implementation authenticates with the Telegram API using credentials stored in environment variables and integrates seamlessly with Claude Desktop through a simple configuration. Particularly valuable for users who want to monitor or participate in Telegram conversations while working with Claude.",MINIMAL,0.27,1.0,7.6,-2.28,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,21930,38,22,3.5,,Yes,No,,
qpd-v,mcp-ragdocs,94,0,"This MCP server, developed by qpd-v, enables AI assistants to perform semantic search and retrieval of documentation using a vector database (Qdrant). It provides tools for adding documentation from URLs, searching through stored content, and listing sources. The server implements web scraping, text chunking, and embedding generation using either Ollama or OpenAI. By connecting AI capabilities with vector search technology, this implementation empowers AI assistants to quickly find relevant information within large document collections. It is particularly useful for applications requiring context-aware information retrieval, knowledge base augmentation, or any scenario where an AI system needs to efficiently access and reason about domain-specific documentation.",MINIMAL,0.72,1.0,7.5,-2.25,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,9148,23,24,5.0,,No,Yes,,http://localhost:11434; http://127.0.0.1:6333
getsentry,sentry-mcp,94,0,"A server implementation of the Model Context Protocol (MCP) for Sentry, allowing AI applications to retrieve error and performance data from Sentry to provide context about application issues.",LOW,0.03,1.0,7.5,-2.25,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,5004,11,10,5.0,project_info,Yes,Yes,Found pattern: send.*data; Potential data exfiltration: send.*data; Found pattern: fetch\s*\(,https://sentry.io/api/0/organizations/sentry-mcp-evals/events/?dataset=spans&per_page=10&referrer=sentry-mcp&sort=-span.duration&allowAggregateConditions=0&useRpc=1&field=id&field=trace&field=span.op&field=span.description&field=span.duration&field=transaction&field=project&field=timestamp&query=is_transaction%3Atrue; https://developer.mozilla.org/docs/Web/API/Event/preventDefault; https://developer.mozilla.org/docs/Web/API/EventSource/open_event; https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController; https://developer.mozilla.org/docs/Web/API/CloseEvent
gongrzhe,office-word-mcp-server,93,10776,"Office-Word-MCP-Server provides a bridge between AI assistants and Microsoft Word documents, enabling rich document editing capabilities through a standardized interface. Built with Python and python-docx, it exposes tools for document creation, content addition, text formatting, table manipulation, and style management while handling common edge cases like missing styles and locked files. The server is particularly valuable for users who need to programmatically create and modify Word documents through natural language requests, with features like proportional image scaling, custom style creation, and detailed error handling making it suitable for both simple editing tasks and complex document automation workflows.",MINIMAL,1.37,1.6,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,7798,35,10,5.0,,No,No,,
wopal-cn,mcp-hotnews-server,93,42480,"This MCP server, developed by SamuelXu, provides real-time hot trending topics from major Chinese social platforms and news sites. It integrates with platforms like Zhihu, Weibo, and Bilibili to aggregate and serve up-to-date trending information. Built with TypeScript and leveraging the @modelcontextprotocol/sdk, it offers a containerized solution via Docker for easy deployment. The server is designed for applications requiring current Chinese social media trends, such as news aggregators, social media analytics tools, or AI assistants needing context on Chinese online discourse.",MINIMAL,1.41,1.6,6.5,-1.95,Yes,Yes,Yes,Yes,No,No,Yes,Yes,Yes,Yes,2030,13,4,5.0,error_handling,No,No,,
canvrno,proxmoxmcp,92,0,"Proxmox MCP Server provides a Model Context Protocol interface for managing Proxmox virtualization environments, enabling AI assistants to interact with virtual machines, containers, storage, and cluster resources. Built by Kevin, it offers tools for retrieving node status, executing commands within VMs via QEMU guest agent, monitoring storage pools, and checking cluster health - all through a structured API with comprehensive error handling and logging. The implementation uses token-based authentication with Proxmox's API and includes detailed formatting for console output, making it particularly valuable for system administrators who need to monitor and manage their Proxmox infrastructure without leaving their conversation interface.",MINIMAL,0.77,1.0,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,10325,26,17,5.0,,No,No,,
genomoncology,biomcp,92,6973,"BioMCP is a server implementation that provides structured access to key biomedical databases through a unified interface. Developed by GenomOncology, it connects to ClinicalTrials.gov, PubMed (via PubTator3), and MyVariant.info to enable searching and retrieving information about clinical trials, research articles, and genetic variants. The server exposes these capabilities as MCP tools that can be used by AI assistants to access up-to-date biomedical data, overcoming knowledge cutoff limitations. BioMCP handles entity normalization, intelligent rendering of complex data as Markdown, and transparent attribution of sources, making it valuable for biomedical research, clinical decision support, and literature review workflows.",MINIMAL,1.38,1.4,7.5,-2.25,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,5384,23,5,5.0,error_handling,No,No,Found pattern: collect.*data,https://www.disease-ontology.org/?id=DOID:4851; http://www.ncbi.nlm.nih.gov/pubmed/25024077; https://run.opencravat.org/webapps/variantreport/index.html?alt_base=T&chrom=chr7&pos=140753336&ref_base=A; http://www.ncbi.nlm.nih.gov/pubmed/21107320; http://www.ncbi.nlm.nih.gov/pubmed/31985841
erickwendel,erickwendel-contributions-mcp,90,0,"The erickwendel-contributions-mcp server provides AI assistants with access to Erick Wendel's content contributions across different platforms through a set of specialized tools. Built with Node.js and the Model Context Protocol SDK, it enables querying talks, posts, and videos with filtering options by language, title, country, and other parameters. The implementation includes Docker containerization for easy deployment and is configured through Smithery.ai for seamless integration with AI assistants. This server is particularly valuable for users wanting to discover and reference Erick Wendel's technical content within AI assistant conversations without needing to search across multiple platforms manually.",MINIMAL,0.78,1.0,7.5,-2.25,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,7290,19,18,3.5,,No,No,,
admica,filescopemcp,90,0,"FileScopeMCP is a TypeScript-based MCP server that analyzes codebases to identify important files based on dependency relationships, providing AI tools with structural understanding of projects. It scans source files to detect imports across multiple languages (JavaScript, TypeScript, Python, C/C++, Rust, Lua, Zig), calculates importance scores (0-10) based on dependency patterns, and generates visualizations using Mermaid diagrams. The implementation features persistent storage of file trees, cross-platform path handling, and tools for querying file importance, finding critical components, and adding human-readable summaries to files, making it valuable for developers who want AI assistants to understand the architecture and significance of different files in their projects.",MINIMAL,0.88,1.0,7.3,-2.19,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,10573,24,16,5.0,error_handling,No,No,Found pattern: tracking,
okooo5km,memory-mcp-server,90,0,"Memory MCP Server provides a knowledge graph management system for AI assistants to maintain persistent memory across conversations. Built in Swift, it enables creating, reading, updating, and deleting entities and relations in a JSON-based storage system. The server implements nine specialized tools for graph operations including entity creation, relation management, observation tracking, and search capabilities. Data is stored in a configurable file location, making it ideal for applications requiring AI assistants to build and maintain structured knowledge over time without losing context between sessions.",MINIMAL,0.79,1.0,7.1,-2.13,Yes,Yes,Yes,Yes,No,No,Yes,Yes,Yes,Yes,10287,28,15,3.5,error_handling,No,No,,
pfldy2850,py-mcp-naver,89,0,"Naver MCP Server provides a comprehensive interface to Naver's OpenAPI services through the Model Context Protocol. This implementation exposes 14 different tools for interacting with Naver's search capabilities, including blog, news, book, image, and shopping searches, as well as specialized functions like adult content checking and spelling correction. The server requires Naver API credentials to function and is built using FastMCP, making it easy to deploy and integrate with AI assistants. Particularly valuable for applications requiring Korean-language search capabilities and access to Naver's extensive content ecosystem.",MINIMAL,0.3,1.0,6.7,-2.01,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,Yes,Yes,4589,27,19,5.0,usage; configuration,Yes,No,,
tumf,mcp-text-editor,89,23756,"This MCP text editor server, developed by tumf, enables AI assistants like Claude to perform line-oriented text file operations through a standardized API. Built in Python, it provides capabilities for efficient partial file access, concurrent editing with conflict detection, and atomic multi-file operations. The implementation stands out by optimizing for token efficiency in LLM applications while ensuring safe, synchronized file access. By connecting AI capabilities with robust text editing functionality, this server allows AI systems to read, modify, and analyze text files with fine-grained control. It is particularly useful for collaborative editing tools, automated text processing systems, and AI-powered development assistants that need to interact with codebases or documentation.",MINIMAL,1.37,1.6,7.8,-2.34,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,Yes,12540,35,27,5.0,,No,No,,
vertile-ai,next-mcp-server,87,571,"Next.js MCP server enables AI assistants to analyze and understand Next.js applications by extracting API route information, validation schemas, and type definitions. Built by jazelly, it scans project directories to discover route handlers, parameters, status codes and response types, providing structured insights about the application's API surface. Particularly valuable for developers who want AI assistants to help with Next.js API development, documentation, and testing without manually documenting endpoint details.",MINIMAL,0.8,1.0,6.8,-2.04,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,Yes,2525,12,10,5.0,,No,No,,
mcp,snak,87,0,"Snak is a toolkit for creating AI agents that interact with the Starknet blockchain, developed by Kasar Labs. The implementation provides both a ready-to-use NestJS server with web interface and an NPM package, supporting multiple AI providers including Anthropic, OpenAI, Google Gemini, and Ollama. It features a modular architecture with plugins for various DeFi operations, wallet management capabilities, and autonomous agent functionality, making it ideal for developers building blockchain-powered AI assistants that can execute transactions, monitor balances, and interact with smart contracts on Starknet.",MINIMAL,1.0,1.0,0,-0.0,No,No,No,No,No,No,No,No,No,No,0,0,0,0,,No,No,,
madarco,ragrabbit,87,463,"This MCP server implementation provides AI assistants with access to RagRabbit, an open-source system for site AI search and LLM.txt generation. It integrates with LlamaIndex and pgVector to crawl websites, convert pages to markdown, generate vector embeddings, and enable AI-powered search and question answering from indexed content. The server exposes functionality for crawling URLs, managing indexes, and querying the knowledge base, making it useful for applications requiring domain-specific information retrieval and conversational AI capabilities.",MINIMAL,0.78,1.0,7.4,-2.22,Yes,Yes,Yes,Yes,Yes,No,Yes,Yes,Yes,Yes,9954,24,14,3.5,error_handling,Yes,Yes,,
